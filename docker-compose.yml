services:
  toy:
    build:  
      context: ./
      dockerfile: ./toy_django_project/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    working_dir: /app/toy_django_project
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ~/.pharos/aws_dev_bucket_user.env
    environment:
      - DATABASE_URL=postgres://toy:hi@db:5432/toy

  live:
    build:  
      context: ./live_responder
      additional_contexts:
        chunks: ./toy_django_project
    command: python -m live_responder.server
    working_dir: /app
    volumes:
      - ./live_responder/live_responder:/app/live_responder
      - ./toy_django_project/out:/app/data
    env_file:
      - ~/.pharos/aws_dev_bucket_user.env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8003:8003"

  db:
    image: postgres:16
    volumes:
      - toy_pg_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=hi
      - POSTGRES_USER=toy
      - POSTGRES_DB=toy
    ports:
      - "5432:5432"

  metabase:
    stdin_open: true
    tty: true
    image: metabase/metabase:v0.53.4.1
    environment:
      - MB_JETTY_PORT=8001
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=metabase
      - MB_DB_PASS=hi
      - MB_DB_HOST=db
      # CREATE USER metabase WITH PASSWORD 'hi';
      # CREATE DATABASE metabase;
      # ALTER DATABASE metabase OWNER TO metabase;
    healthcheck:
      test: curl --fail -I http://localhost:7000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - "8001:8001"
    depends_on:
      - db

volumes:
  toy_pg_data: 